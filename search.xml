<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>动手写一个编译器</title>
      <link href="/2022/03/01/dong-shou-xie-yi-ge-bian-yi-qi/"/>
      <url>/2022/03/01/dong-shou-xie-yi-ge-bian-yi-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="ToyC语言"><a href="#ToyC语言" class="headerlink" title="ToyC语言"></a>ToyC语言</h1><p>本项目用于学习编译原理。</p><p>将参照龙书版本的《编译原理》，</p><p>以及LLVM的编译器制作教程：<a href="https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html">https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/LangImpl01.html</a></p><p>制作一个完整的编译器前端。</p><h2 id="编译器的结构"><a href="#编译器的结构" class="headerlink" title="编译器的结构"></a>编译器的结构</h2><p><img src="https://imagehost.vitaminz-image.top/ToyC-1.png"></p><center>图1：摘自《Compilers Principles, Techniques &amp; Tools》第二版Figure 2.3</center><h3 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h3><p><img src="https://imagehost.vitaminz-image.top/UML.png"></p><center>图2：UML</center><h3 id="词法分析器-Lexer"><a href="#词法分析器-Lexer" class="headerlink" title="词法分析器(Lexer)"></a>词法分析器(Lexer)</h3><h4 id="设计Token"><a href="#设计Token" class="headerlink" title="设计Token"></a>设计Token</h4><p>Token主要分为: 多字符保留字、标识符、数字以及其余单个字符。</p><ul><li>多字符保留字：<ul><li>控制流语句：if, else, do, while, break</li><li>布尔运算：true, false, &amp;&amp;, ||</li><li>比较运算：&gt;=, &lt;=, ==, !=</li><li>变量类型：int, float, bool, char</li></ul></li><li>标识符：<ul><li>正则表达式：[_a-zA-Z][_a-zA-Z0-9]*</li></ul></li><li>数字：<ul><li>整型正则表达式：[0-9]+</li><li>浮点型正则表达式：[0-9]+.[0-9]*</li></ul></li><li>其余单个字字符</li></ul><h4 id="识别算法"><a href="#识别算法" class="headerlink" title="识别算法"></a>识别算法</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>输入：字符串<br>输出：按序输出token流，每个token占一行</p><p>词法分析器的步骤可用如下伪代码表示：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Input:  </span><br><span class="line">Output: </span><br><span class="line">cache = <span class="string">' '</span></span><br><span class="line">Scan() {</span><br><span class="line">    <span class="keyword">do</span>{</span><br><span class="line">        <span class="keyword">if</span> cache != 空格、换行、制表符</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }<span class="keyword">while</span>(read(cache));</span><br><span class="line"></span><br><span class="line">    t = readKey(cache)     <span class="comment">// 识别保留字</span></span><br><span class="line">    t = readNumber(cache); <span class="comment">// 识别实数</span></span><br><span class="line">    t = </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="语法分析器-Parser"><a href="#语法分析器-Parser" class="headerlink" title="语法分析器(Parser)"></a>语法分析器(Parser)</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM -&gt; BLOCK</span><br><span class="line">BLOCK -&gt; <span class="string">'{'</span> DECLS STMTS <span class="string">'}'</span></span><br><span class="line">DECLS -&gt; DECLS DECL</span><br><span class="line">    -&gt; eps</span><br><span class="line">DECL -&gt; TYPE id<span class="number">'</span>;'</span><br><span class="line">TYPE-&gt; basic DIMS</span><br><span class="line">DIMS-&gt; <span class="string">'['</span>DIMS<span class="number">'</span>]'</span><br><span class="line">-&gt; eps</span><br><span class="line">STMTS-&gt; STMTS STMT</span><br><span class="line">    -&gt; eps</span><br><span class="line"></span><br><span class="line">STMT-&gt; ASSIGN<span class="number">'</span>;'</span><br><span class="line">-&gt; <span class="keyword">if</span> ( BOOL ) STMT</span><br><span class="line">        -&gt; <span class="keyword">if</span> ( BOOL ) STMT <span class="keyword">else</span> STMT</span><br><span class="line">        -&gt; <span class="keyword">while</span> ( BOOL ) STMT</span><br><span class="line">        -&gt; <span class="keyword">do</span> STMT <span class="keyword">while</span> ( BOOL )</span><br><span class="line">        -&gt; <span class="keyword">break</span><span class="number">'</span>;'</span><br><span class="line">        -&gt; BLOCK</span><br><span class="line">ASSIGN  -&gt; id OFFSET = BOOL</span><br><span class="line">OFFSET  -&gt; [ BOOL ] OFFSET</span><br><span class="line">        -&gt; eps</span><br><span class="line">            </span><br><span class="line">BOOL-&gt; BOOL <span class="string">"||"</span> JOIN</span><br><span class="line">        -&gt; JOIN</span><br><span class="line">JOIN-&gt; JOIN <span class="string">"&amp;&amp;"</span> EQAULITY</span><br><span class="line">        -&gt; EQUALITY</span><br><span class="line">EQUALITY-&gt; EQUALITY <span class="string">"=="</span> CMP</span><br><span class="line">        -&gt; EQUALITY <span class="string">"!="</span> CMP</span><br><span class="line">        -&gt; CMP</span><br><span class="line">CMP-&gt; EXPR &lt; EXPR</span><br><span class="line">        -&gt; EXPR &lt;= EXPR</span><br><span class="line">        -&gt; EXPR &gt;= EXPR</span><br><span class="line">        -&gt; EXPR &gt; EXPR</span><br><span class="line">        -&gt; EXPR</span><br><span class="line">EXPR-&gt; EXPR + TERM</span><br><span class="line">        -&gt; EXPR - TERM</span><br><span class="line">        -&gt; TERM</span><br><span class="line">TERM-&gt; TERM * UNARY</span><br><span class="line">        -&gt; TERM / UNARY</span><br><span class="line">        -&gt; UNARY</span><br><span class="line">UNARY-&gt; <span class="string">'!'</span> UNARY</span><br><span class="line">        -&gt; <span class="string">'-'</span> UNARY</span><br><span class="line">        -&gt; FACTOR</span><br><span class="line">FACTOR-&gt; ( BOOL )</span><br><span class="line">        -&gt; id OFFSET</span><br><span class="line">        -&gt; number</span><br><span class="line">        -&gt; real</span><br><span class="line">        -&gt; <span class="literal">true</span></span><br><span class="line">        -&gt; <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h3 id="符号表-Symbol-Table"><a href="#符号表-Symbol-Table" class="headerlink" title="符号表(Symbol Table)"></a>符号表(Symbol Table)</h3><img src="https://imagehost.vitaminz-image.top/ToyC-2.png" style="zoom:50%;"><center>图2：符号表示意图</center><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM -&gt; {top = null;} BLOCK</span><br><span class="line">BLOCK -&gt; <span class="string">'{'</span> </span><br><span class="line">{ saved = top;<span class="comment">// 保留现场，saved</span></span><br><span class="line">  top = <span class="keyword">new</span> <span class="built_in">Scope</span>(top); } <span class="comment">// 碰到块建立符号表，top指向当前块符号表</span></span><br><span class="line">DECLS DECL </span><br><span class="line">{ top = saved; }<span class="comment">// 恢复现场，</span></span><br><span class="line"><span class="string">'}'</span></span><br><span class="line">DECLS -&gt; DECLS DECL</span><br><span class="line">      -&gt; eps</span><br><span class="line">DECL  -&gt; TYPE id<span class="number">'</span>;<span class="string">' { s = new Symbol(id);// </span></span><br><span class="line"><span class="string">  s.type = TYPE.lexeme;</span></span><br><span class="line"><span class="string">  top.put(id.lexeme, s); }</span></span><br><span class="line"><span class="string">TYPE  -&gt; basic {DIMS.type = basic; } </span></span><br><span class="line"><span class="string"> DIMS {TYPE.lexeme = DIMS.type; }</span></span><br><span class="line"><span class="string">DIMS  -&gt; '</span>[<span class="string">'num'</span>]<span class="string">' DIMS { Array.sz = num * Array.sz;</span></span><br><span class="line"><span class="string">      DIMS.type = Array; }</span></span><br><span class="line"><span class="string">      -&gt; eps { Array.sz = 1; </span></span><br><span class="line"><span class="string">               Array.type = Dims.type; }</span></span><br><span class="line"><span class="string">STMTS -&gt; STMTS STMT </span></span><br><span class="line"><span class="string">      -&gt; eps</span></span><br><span class="line"><span class="string">STMT  -&gt; BLOCK</span></span><br><span class="line"><span class="string">STMT  -&gt; .... &gt; ... id { s = top.get(id.lexeme); } ....</span></span><br></pre></td></tr></tbody></table></figure><p>单元测试：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM -&gt; BLOCK</span><br><span class="line">BLOCK -&gt; <span class="string">'{'</span> DECLS STMTS <span class="string">'}'</span></span><br><span class="line">DECLS -&gt; DECLS DECL</span><br><span class="line">    -&gt; eps</span><br><span class="line">DECL -&gt; TYPE id <span class="string">';'</span></span><br><span class="line">TYPE-&gt; basic DIMS</span><br><span class="line">DIMS-&gt; <span class="string">'['</span>num<span class="number">'</span>]<span class="string">'DIMS</span></span><br><span class="line"><span class="string">-&gt; eps</span></span><br><span class="line"><span class="string">STMTS-&gt; STMTS STMT</span></span><br><span class="line"><span class="string">    -&gt; eps</span></span><br><span class="line"><span class="string">STMT-&gt; BLOCK</span></span><br><span class="line"><span class="string">    -&gt; FACTOR '</span>;'</span><br><span class="line">FACTOR-&gt; id</span><br></pre></td></tr></tbody></table></figure><h3 id="中间代码-Intermediate-Code"><a href="#中间代码-Intermediate-Code" class="headerlink" title="中间代码(Intermediate Code)"></a>中间代码(Intermediate Code)</h3><h4 id="表达式的计算"><a href="#表达式的计算" class="headerlink" title="表达式的计算"></a>表达式的计算</h4><img src="https://imagehost.vitaminz-image.top/ToyC-3.png" style="zoom: 25%;"><p><img src="https://imagehost.vitaminz-image.top/ToyC-5.png" style="zoom: 25%;"></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM -&gt; STMTS</span><br><span class="line">STMTS-&gt; STMTS STMT</span><br><span class="line">    -&gt; eps</span><br><span class="line">STMT-&gt; ASSIGN<span class="number">'</span>;'</span><br><span class="line">ASSIGN  -&gt; id OFFSET = BOOL</span><br><span class="line">OFFSET  -&gt; [ BOOL ] OFFSET</span><br><span class="line">        -&gt; eps</span><br><span class="line"></span><br><span class="line">BOOL-&gt; BOOL <span class="string">"||"</span> JOIN</span><br><span class="line">        -&gt; JOIN</span><br><span class="line">JOIN-&gt; JOIN <span class="string">"&amp;&amp;"</span> EQAULITY</span><br><span class="line">        -&gt; EQUALITY</span><br><span class="line">EQUALITY-&gt; EQUALITY <span class="string">"=="</span> CMP</span><br><span class="line">        -&gt; EQUALITY <span class="string">"!="</span> CMP</span><br><span class="line">        -&gt; CMP</span><br><span class="line">CMP-&gt; EXPR &lt; EXPR</span><br><span class="line">        -&gt; EXPR &lt;= EXPR</span><br><span class="line">        -&gt; EXPR &gt;= EXPR</span><br><span class="line">        -&gt; EXPR &gt; EXPR</span><br><span class="line">EXPR-&gt; EXPR + TERM</span><br><span class="line">        -&gt; EXPR - TERM</span><br><span class="line">        -&gt; TERM</span><br><span class="line">TERM-&gt; TERM * UNARY</span><br><span class="line">        -&gt; TERM / UNARY</span><br><span class="line">        -&gt; UNARY</span><br><span class="line">UNARY-&gt; <span class="string">'!'</span> UNARY</span><br><span class="line">        -&gt; <span class="string">'-'</span> UNARY</span><br><span class="line">        -&gt; FACTOR</span><br><span class="line">FACTOR-&gt; ( BOOL )</span><br><span class="line">        -&gt; OFFSET</span><br><span class="line">        -&gt; number</span><br><span class="line">        -&gt; real</span><br><span class="line">        -&gt; <span class="literal">true</span></span><br><span class="line">        -&gt; <span class="literal">false</span></span><br><span class="line">        -&gt; id OFFSET</span><br></pre></td></tr></tbody></table></figure><p>输入</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = b + 1;</span><br><span class="line">c = a + 32 * 43 - b / ( g - 2);</span><br><span class="line">d = e + f;</span><br><span class="line">c = -e[3];</span><br><span class="line">c[33+34+sd3*c] = de*c + c2;</span><br><span class="line">f[c[2*d]+4] = df + de[23-s[f]];</span><br><span class="line">s[m][n][o] = -d[3][x];</span><br><span class="line">a = !a || s &amp;&amp; (c || d) || !f &amp;&amp; kk ;</span><br><span class="line">b = (a + c) &gt; (b * 2 - 1) || a &lt; b &amp;&amp; c;</span><br></pre></td></tr></tbody></table></figure><p>输出</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">a = b + 1</span><br><span class="line">L3:t1 = 32 * 43</span><br><span class="line">t2 = a + t1</span><br><span class="line">t3 = g - 2</span><br><span class="line">t4 = b / t3</span><br><span class="line">c = t2 - t4</span><br><span class="line">L4:d = e + f</span><br><span class="line">L5:t5 = 3 * 10</span><br><span class="line">t6 = e[t5]</span><br><span class="line">c = -t6</span><br><span class="line">L6:t7 = 33 + 34</span><br><span class="line">t8 = sd3 * c</span><br><span class="line">t9 = t7 + t8</span><br><span class="line">t10 = t9 * 10</span><br><span class="line">t11 = c[t10]</span><br><span class="line">t12 = de * c</span><br><span class="line">t13 = t12 + c2</span><br><span class="line">c[t11] = t13</span><br><span class="line">L7:t14 = 2 * d</span><br><span class="line">t15 = t14 * 10</span><br><span class="line">t16 = c[t15]</span><br><span class="line">t17 = t16 + 4</span><br><span class="line">t18 = t17 * 10</span><br><span class="line">t19 = f[t18]</span><br><span class="line">t20 = f * 10</span><br><span class="line">t21 = s[t20]</span><br><span class="line">t22 = 23 - t21</span><br><span class="line">t23 = t22 * 10</span><br><span class="line">t24 = de[t23]</span><br><span class="line">t25 = df + t24</span><br><span class="line">f[t19] = t25</span><br><span class="line">L8:t26 = m * 10</span><br><span class="line">t27 = n * 10</span><br><span class="line">t28 = t26 + t27</span><br><span class="line">t29 = o * 10</span><br><span class="line">t30 = t28 + t29</span><br><span class="line">t31 = s[t30]</span><br><span class="line">t32 = 3 * 10</span><br><span class="line">t33 = x * 10</span><br><span class="line">t34 = t32 + t33</span><br><span class="line">t35 = d[t34]</span><br><span class="line">t36 = -t35</span><br><span class="line">s[t31] = t36</span><br><span class="line">L9:if False a goto L13</span><br><span class="line">t37 = 23 * 10</span><br><span class="line">t38 = f * 10</span><br><span class="line">t39 = t37 + t38</span><br><span class="line">t40 = sp[t39]</span><br><span class="line">if False t40 goto L14</span><br><span class="line">if c goto L13</span><br><span class="line">if d goto L13</span><br><span class="line">goto L14</span><br><span class="line">L14:if f goto L11</span><br><span class="line">if kk goto L13</span><br><span class="line">goto L11</span><br><span class="line">L13:t41 = true</span><br><span class="line">goto L12</span><br><span class="line">L11:t41 = false</span><br><span class="line">L12:a = t41</span><br><span class="line">L10:t42 = a + c</span><br><span class="line">t43 = b * 2</span><br><span class="line">t44 = t43 - 1</span><br><span class="line">if t42 &gt; t44 goto L17</span><br><span class="line">if False a &lt; b goto L15</span><br><span class="line">if c goto L17</span><br><span class="line">goto L15</span><br><span class="line">L17:t45 = true</span><br><span class="line">goto L16</span><br><span class="line">L15:t45 = false</span><br><span class="line">L16:b = t45</span><br><span class="line">L2:</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="控制流语句的中间代码"><a href="#控制流语句的中间代码" class="headerlink" title="控制流语句的中间代码"></a>控制流语句的中间代码</h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">PROGRAM -&gt; BLOCK</span><br><span class="line">BLOCK -&gt; <span class="string">'{'</span> STMTS <span class="string">'}'</span></span><br><span class="line">STMTS-&gt; STMTS STMT</span><br><span class="line">    -&gt; eps</span><br><span class="line"></span><br><span class="line">STMT-&gt; ASSIGN<span class="number">'</span>;'</span><br><span class="line">-&gt; <span class="keyword">if</span> ( BOOL ) STMT</span><br><span class="line">        -&gt; <span class="keyword">if</span> ( BOOL ) STMT <span class="keyword">else</span> STMT</span><br><span class="line">        -&gt; <span class="keyword">while</span> ( BOOL ) STMT</span><br><span class="line">        -&gt; <span class="keyword">do</span> STMT <span class="keyword">while</span> ( BOOL )</span><br><span class="line">        -&gt; <span class="keyword">break</span><span class="number">'</span>;'</span><br><span class="line">        -&gt; BLOCK</span><br><span class="line">ASSIGN  -&gt; id OFFSET = BOOL</span><br><span class="line">OFFSET  -&gt; [ BOOL ]</span><br><span class="line">        -&gt; eps</span><br><span class="line">            </span><br><span class="line">BOOL-&gt; BOOL <span class="string">"||"</span> JOIN</span><br><span class="line">        -&gt; JOIN</span><br><span class="line">JOIN-&gt; JOIN <span class="string">"&amp;&amp;"</span> EQAULITY</span><br><span class="line">        -&gt; EQUALITY</span><br><span class="line">EQUALITY-&gt; EQUALITY <span class="string">"=="</span> CMP</span><br><span class="line">        -&gt; EQUALITY <span class="string">"!="</span> CMP</span><br><span class="line">        -&gt; CMP</span><br><span class="line">CMP-&gt; EXPR &lt; EXPR</span><br><span class="line">        -&gt; EXPR &lt;= EXPR</span><br><span class="line">        -&gt; EXPR &gt;= EXPR</span><br><span class="line">        -&gt; EXPR &gt; EXPR</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>输入</p><figure class="highlight txt"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    if ((a + c) &gt; (b * 2 - 1) || a &lt; b &amp;&amp; c){</span><br><span class="line">        a = b * 2 - c + (b + 2 * d);</span><br><span class="line">    }</span><br><span class="line">    while (a &gt; 3){</span><br><span class="line">        a = a + 1;</span><br><span class="line">        do a = a + 3; while( b &gt; 2);</span><br><span class="line">        if (c - 3){</span><br><span class="line">            b = c + 5;</span><br><span class="line">            d = a + 3;</span><br><span class="line">        }</span><br><span class="line">        else {</span><br><span class="line">            c = 3;</span><br><span class="line">            break;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    while (c &lt; b){</span><br><span class="line">        a = 3;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出</p><figure class="highlight vbnet"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">L1:</span>t1 = a + c</span><br><span class="line">t2 = b * <span class="number">2</span></span><br><span class="line">t3 = t2 - <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> t1 &gt; t3 <span class="keyword">goto</span> L5</span><br><span class="line"><span class="keyword">if</span> <span class="literal">False</span> a &lt; b <span class="keyword">goto</span> L3</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">goto</span> L5</span><br><span class="line"><span class="keyword">goto</span> L3</span><br><span class="line"><span class="symbol">L5:</span>L4:t4 = b * <span class="number">2</span></span><br><span class="line">t5 = t4 - c</span><br><span class="line">t6 = <span class="number">2</span> * d</span><br><span class="line">t7 = b + t6</span><br><span class="line">a = t5 + t7</span><br><span class="line"><span class="symbol">L3:</span><span class="keyword">if</span> <span class="literal">False</span> a &gt; <span class="number">3</span> <span class="keyword">goto</span> L6</span><br><span class="line"><span class="symbol">L7:</span>a = a + <span class="number">1</span></span><br><span class="line"><span class="symbol">L8:</span>a = a + <span class="number">3</span></span><br><span class="line"><span class="symbol">L10:</span><span class="keyword">if</span> b &gt; <span class="number">2</span> <span class="keyword">goto</span> L8</span><br><span class="line"><span class="keyword">goto</span> L9</span><br><span class="line"><span class="symbol">L9:</span><span class="keyword">if</span> <span class="literal">False</span> c - <span class="number">3</span> <span class="keyword">goto</span> L12</span><br><span class="line"><span class="symbol">L11:</span>b = c + <span class="number">5</span></span><br><span class="line"><span class="symbol">L13:</span>d = a + <span class="number">3</span></span><br><span class="line"><span class="keyword">goto</span> L3</span><br><span class="line"><span class="symbol">L12:</span>c = <span class="number">3</span></span><br><span class="line"><span class="symbol">L14:</span><span class="keyword">goto</span> L6</span><br><span class="line"><span class="keyword">goto</span> L3</span><br><span class="line"><span class="symbol">L6:</span><span class="keyword">if</span> <span class="literal">False</span> c &lt; b <span class="keyword">goto</span> L2</span><br><span class="line"><span class="symbol">L15:</span>a = <span class="number">3</span></span><br><span class="line"><span class="keyword">goto</span> L6</span><br><span class="line"><span class="symbol">L2:</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上线测试</title>
      <link href="/2022/03/01/shang-xian-ce-shi/"/>
      <url>/2022/03/01/shang-xian-ce-shi/</url>
      
        <content type="html"><![CDATA[<p>本文用于上线测试</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>{</span><br><span class="line">    <span class="built_in">printf</span>()</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="公式块"><a href="#公式块" class="headerlink" title="公式块"></a>公式块</h3><p>$$<br>\int_a^b f(x)<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
